/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ContractManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractManager__factory>;
    getContractFactory(
      name: "BaseController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseController__factory>;
    getContractFactory(
      name: "BaseStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStorage__factory>;
    getContractFactory(
      name: "Owned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Owned__factory>;
    getContractFactory(
      name: "TweetController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TweetController__factory>;
    getContractFactory(
      name: "TweetStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TweetStorage__factory>;
    getContractFactory(
      name: "UserController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UserController__factory>;
    getContractFactory(
      name: "UserStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UserStorage__factory>;

    getContractAt(
      name: "ContractManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractManager>;
    getContractAt(
      name: "BaseController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseController>;
    getContractAt(
      name: "BaseStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseStorage>;
    getContractAt(
      name: "Owned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Owned>;
    getContractAt(
      name: "TweetController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TweetController>;
    getContractAt(
      name: "TweetStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TweetStorage>;
    getContractAt(
      name: "UserController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UserController>;
    getContractAt(
      name: "UserStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UserStorage>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
