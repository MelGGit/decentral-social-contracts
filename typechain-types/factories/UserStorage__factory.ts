/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UserStorage, UserStorageInterface } from "../UserStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_username",
        type: "bytes32",
      },
    ],
    name: "createUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061010e806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063abf7bfd814602d575b600080fd5b603c60383660046098565b604e565b60405190815260200160405180910390f35b6001805460009182605d8360b0565b909155505060408051808201825260018054808352602080840196875260009182528190529290922090518155925192810192909255505490565b60006020828403121560a957600080fd5b5035919050565b600060001982141560d157634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122008cf7bde029ac24c6f240afea0ad0c8bae454efce05d6501b7b9c06cf39b722764736f6c63430008090033";

type UserStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserStorage__factory extends ContractFactory {
  constructor(...args: UserStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UserStorage> {
    return super.deploy(overrides || {}) as Promise<UserStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UserStorage {
    return super.attach(address) as UserStorage;
  }
  connect(signer: Signer): UserStorage__factory {
    return super.connect(signer) as UserStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserStorageInterface {
    return new utils.Interface(_abi) as UserStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserStorage {
    return new Contract(address, _abi, signerOrProvider) as UserStorage;
  }
}
