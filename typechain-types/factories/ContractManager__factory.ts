/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../ContractManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "deleteAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561046c806100326000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80639b2ea4bd1461005c5780639c675eaa14610071578063bf40fac1146100a0578063c193b42a146100b3578063f2fde38b146100c6575b600080fd5b61006f61006a36600461030d565b6100d9565b005b600054610084906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100846100ae36600461035b565b610150565b61006f6100c136600461035b565b610181565b61006f6100d4366004610398565b6101ef565b6000546001600160a01b0316331461010c5760405162461bcd60e51b8152600401610103906103ba565b60405180910390fd5b8060018360405161011d91906103fb565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b600060018260405161016291906103fb565b908152604051908190036020019020546001600160a01b031692915050565b6000546001600160a01b031633146101ab5760405162461bcd60e51b8152600401610103906103ba565b60006001826040516101bd91906103fb565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550565b6000546001600160a01b031633146102195760405162461bcd60e51b8152600401610103906103ba565b6001600160a01b03811661022c57600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261027557600080fd5b813567ffffffffffffffff808211156102905761029061024e565b604051601f8301601f19908116603f011681019082821181831017156102b8576102b861024e565b816040528381528660208588010111156102d157600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b038116811461030857600080fd5b919050565b6000806040838503121561032057600080fd5b823567ffffffffffffffff81111561033757600080fd5b61034385828601610264565b925050610352602084016102f1565b90509250929050565b60006020828403121561036d57600080fd5b813567ffffffffffffffff81111561038457600080fd5b61039084828501610264565b949350505050565b6000602082840312156103aa57600080fd5b6103b3826102f1565b9392505050565b60208082526021908201527f6f6e6c7920746865204f776e65722063616e2063616c6c2066756e6374696f6e6040820152602160f81b606082015260800190565b6000825160005b8181101561041c5760208186018101518583015201610402565b8181111561042b576000828501525b50919091019291505056fea2646970667358221220986215821cef0fa452e2460a6b9f5ef0fcff086afe5ce4886a4bd7d4ec01fb7364736f6c63430008090033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
