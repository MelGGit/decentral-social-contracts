/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContractManager,
  ContractManagerInterface,
} from "../ContractManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "deleteAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556103fc806100326000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80639b2ea4bd1461005c5780639c675eaa14610071578063bf40fac1146100a0578063c193b42a146100b3578063f2fde38b146100c6575b600080fd5b61006f61006a3660046102de565b6100d9565b005b600054610084906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100846100ae36600461032c565b610134565b61006f6100c136600461032c565b61017d565b61006f6100d4366004610369565b6101d8565b6000546001600160a01b031633146100f057600080fd5b80600183604051610101919061038b565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b600080546001600160a01b0316331461014c57600080fd5b60018260405161015c919061038b565b908152604051908190036020019020546001600160a01b031690505b919050565b6000546001600160a01b0316331461019457600080fd5b60006001826040516101a6919061038b565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550565b6000546001600160a01b031633146101ef57600080fd5b6001600160a01b03811661020257600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261024b57600080fd5b813567ffffffffffffffff8082111561026657610266610224565b604051601f8301601f19908116603f0116810190828211818310171561028e5761028e610224565b816040528381528660208588010111156102a757600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b038116811461017857600080fd5b600080604083850312156102f157600080fd5b823567ffffffffffffffff81111561030857600080fd5b6103148582860161023a565b925050610323602084016102c7565b90509250929050565b60006020828403121561033e57600080fd5b813567ffffffffffffffff81111561035557600080fd5b6103618482850161023a565b949350505050565b60006020828403121561037b57600080fd5b610384826102c7565b9392505050565b6000825160005b818110156103ac5760208186018101518583015201610392565b818111156103bb576000828501525b50919091019291505056fea26469706673582212205149848e2dfd892281e929600f168852b08208909d80bbb7e4afeac6ab3e4b5e64736f6c63430008090033";

type ContractManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractManager__factory extends ContractFactory {
  constructor(...args: ContractManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractManager> {
    return super.deploy(overrides || {}) as Promise<ContractManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContractManager {
    return super.attach(address) as ContractManager;
  }
  connect(signer: Signer): ContractManager__factory {
    return super.connect(signer) as ContractManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractManagerInterface {
    return new utils.Interface(_abi) as ContractManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractManager {
    return new Contract(address, _abi, signerOrProvider) as ContractManager;
  }
}
