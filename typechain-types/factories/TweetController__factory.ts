/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TweetController,
  TweetControllerInterface,
} from "../TweetController";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_userId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
    ],
    name: "createTweet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_managerAddr",
        type: "address",
      },
    ],
    name: "setManagerAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610451806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637978b231146100515780637cc82f20146100665780639c675eaa1461008c578063f2fde38b146100b7575b600080fd5b61006461005f366004610293565b6100ca565b005b6100796100743660046102cd565b610103565b6040519081526020015b60405180910390f35b60005461009f906001600160a01b031681565b6040516001600160a01b039091168152602001610083565b6100646100c5366004610293565b61022f565b6000546001600160a01b031633146100e157600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60015460405163bf40fac160e01b815260206004820152600c60248201526b547765657453746f7261676560a01b60448201526000916001600160a01b0316908290829063bf40fac19060640160206040518083038186803b15801561016857600080fd5b505afa15801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a09190610388565b6040516303e6417960e51b815290915081906001600160a01b03821690637cc82f20906101d390899089906004016103a5565b602060405180830381600087803b1580156101ed57600080fd5b505af1158015610201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102259190610402565b9695505050505050565b6000546001600160a01b0316331461024657600080fd5b6001600160a01b03811661025957600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116811461029057600080fd5b50565b6000602082840312156102a557600080fd5b81356102b08161027b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156102e057600080fd5b82359150602083013567ffffffffffffffff808211156102ff57600080fd5b818501915085601f83011261031357600080fd5b813581811115610325576103256102b7565b604051601f8201601f19908116603f0116810190838211818310171561034d5761034d6102b7565b8160405282815288602084870101111561036657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561039a57600080fd5b81516102b08161027b565b82815260006020604081840152835180604085015260005b818110156103d9578581018301518582016060015282016103bd565b818111156103eb576000606083870101525b50601f01601f191692909201606001949350505050565b60006020828403121561041457600080fd5b505191905056fea2646970667358221220a8c2bb51a0fac576e4d40c8315fbbfa80dc50fc4bbcfd81c6dfd0715e1b2b3fa64736f6c63430008090033";

type TweetControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TweetControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TweetController__factory extends ContractFactory {
  constructor(...args: TweetControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TweetController> {
    return super.deploy(overrides || {}) as Promise<TweetController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TweetController {
    return super.attach(address) as TweetController;
  }
  connect(signer: Signer): TweetController__factory {
    return super.connect(signer) as TweetController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TweetControllerInterface {
    return new utils.Interface(_abi) as TweetControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TweetController {
    return new Contract(address, _abi, signerOrProvider) as TweetController;
  }
}
